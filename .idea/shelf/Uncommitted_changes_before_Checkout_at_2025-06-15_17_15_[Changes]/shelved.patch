Index: data/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import math\r\n\r\nmport math\r\nimport pandas as pd\r\n\r\n# ------------------------\r\n# Fonction utilitaire : calcul distance Haversine entre deux points (en nautiques)\r\n# ------------------------\r\ndef haversine(lat1, lon1, lat2, lon2):\r\n    \"\"\"\r\n    Calcule la distance entre deux points (lat, lon) en nautiques.\r\n    Entrée en degrés décimaux.\r\n    \"\"\"\r\n    R = 6371.0  # Rayon terrestre en km\r\n    deg2rad = math.pi / 180\r\n    dlat = (lat2 - lat1) * deg2rad\r\n    dlon = (lon2 - lon1) * deg2rad\r\n    a = math.sin(dlat/2)**2 + math.cos(lat1*deg2rad) * math.cos(lat2*deg2rad) * math.sin(dlon/2)**2\r\n    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))\r\n    distance_km = R * c\r\n    return distance_km / 1.852  # conversion km -> nautiques\r\n\r\n# ------------------------\r\n# Exemple : liste des waypoints du trajet prévu (données utilisateur ou calculées)\r\n# ------------------------\r\ntrajet_waypoints = [\r\n    {\"name\": \"WP1\", \"lat\": 50.6333, \"lon\": -113.9333},  # exemple : EBLG\r\n    {\"name\": \"WP2\", \"lat\": 50.6833, \"lon\": -113.7833},  # exemple : EBLG-ECHO\r\n    {\"name\": \"WP3\", \"lat\": 50.4833, \"lon\": -113.9167},  # exemple : EBSP\r\n]\r\n\r\n# ------------------------\r\n# Exemple : base de données d'aérodromes extraits du CFS (données internes)\r\n# ------------------------\r\n# Remplace ceci par l'import réel des données extraites depuis ton script précédent\r\ndf_aerodromes = pd.DataFrame([\r\n    {\"Aérodrome\": \"CEF4\", \"Latitude\": 51.2639, \"Longitude\": -113.9344},\r\n    {\"Aérodrome\": \"CAM4\", \"Latitude\": 52.3458, \"Longitude\": -114.6672},\r\n    {\"Aérodrome\": \"CYMM\", \"Latitude\": 56.6539, \"Longitude\": -111.2228},\r\n    {\"Aérodrome\": \"CEP3\", \"Latitude\": 54.0970, \"Longitude\": -114.4389},\r\n    {\"Aérodrome\": \"CYBA\", \"Latitude\": 51.2, \"Longitude\": -115.5333},\r\n])\r\n\r\n# ------------------------\r\n# Recherche d’aéroports alternatifs dans un rayon donné (ex: 50 NM) autour du trajet\r\n# ------------------------\r\nRAYON_NM = 50  # Rayon de recherche en nautiques\r\nalternatifs = []\r\n\r\nfor wp in trajet_waypoints:\r\n    for _, row in df_aerodromes.iterrows():\r\n        dist = haversine(wp[\"lat\"], wp[\"lon\"], row[\"Latitude\"], row[\"Longitude\"])\r\n        if dist <= RAYON_NM:\r\n            alternatifs.append({\r\n                \"Waypoint\": wp[\"name\"],\r\n                \"Aérodrome\": row[\"Aérodrome\"],\r\n                \"Lat\": row[\"Latitude\"],\r\n                \"Lon\": row[\"Longitude\"],\r\n                \"Distance_NM\": round(dist, 2)\r\n            })\r\n\r\n# Résultat final : tableau des aéroports proches de chaque segment\r\ndf_alternatifs = pd.DataFrame(alternatifs)\r\nfrom ace_tools import display_dataframe_to_user\r\ndisplay_dataframe_to_user(\"Aéroports alternatifs proches du trajet\", df_alternatifs)\r\n
===================================================================
diff --git a/data/__init__.py b/data/__init__.py
--- a/data/__init__.py	(revision ec6c5ee8b828c3178e25a0053df6df26544d5c07)
+++ b/data/__init__.py	(date 1750022043156)
@@ -1,6 +1,4 @@
 import math
-
-mport math
 import pandas as pd
 
 # ------------------------
